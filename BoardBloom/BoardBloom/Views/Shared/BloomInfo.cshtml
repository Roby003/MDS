@model BoardBloom.Models.Bloom

<style>
    .card-body > div:not(:first-child):not(.card-title) {
        border: 2px solid #8484ff;
        padding: 5px;
        margin: 5px 0;
    }

    .user-link {
        color: #555; 
        text-decoration: none; 
        font-weight: bold; 
        transition: color 0.3s;
    }

        .user-link:hover {
            color: #8484ff; 
        }
</style>




<div class="card-body">

    <h3 class="card-title py-3 px-3 rounded-2 text-center" style="background-color:#8484ff;; color: #ffffff;">@Model.Title</h3>

    @if (!string.IsNullOrEmpty(Model.Image))
    {
        if (IsImage(Model.Image))
        {
            <div style="text-align: center;">
                <img src="@Url.Content(Model.Image)" alt="Bloom Image" class="img-fluid" />
            </div>
        }
        else if (IsVideo(Model.Image))
        {
            <div style="text-align: center;">
                <video width="500" controls style="display: inline-block;">
                    <source src="@Url.Content(Model.Image)" type="video/mp4">
                    
                </video>
            </div>
        }
        else if (IsEmbeddedLink(Model.Image))
        {
            <div style="text-align: center;">
                <iframe width="500"
                        controls style="display: inline-block"
                        height="315"
                        src="@Url.Content(Model.Image)"
                        frameborder="0"
                        allowfullscreen></iframe>

            </div>
        }
    }

@*     <div class="card-text">@Model.Content</div>

    <div class="d-flex justify-content-between flex-row mt-5">

        <div>
            
            <a class="user-link"  href="@Url.Action("UserProfile", "Users", new { userId = Model.User.Id })">
                <i class="bi bi-person"></i> @Model.User.UserName
            </a>
        </div>

    <span>@Model.Date</span>

    </div> *@

</div>


@functions {
    private bool IsImage(string filePath)
    {
        var imageExtensions = new[] { ".jpg", ".jpeg", ".png", ".gif", ".bmp" };
        var extension = System.IO.Path.GetExtension(filePath)?.ToLower();
        return extension != null && imageExtensions.Contains(extension);
    }

    private bool IsVideo(string filePath)
    {
        var videoExtensions = new[] { ".mp4", ".avi", ".mkv", ".mov", ".wmv" };
        var extension = System.IO.Path.GetExtension(filePath)?.ToLower();
        return extension != null && videoExtensions.Contains(extension);
    }

    private bool IsEmbeddedLink(string link)
    {
        return link != null && link.ToLower().Contains("http");
    }
}