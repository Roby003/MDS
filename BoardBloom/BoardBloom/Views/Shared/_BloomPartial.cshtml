@model BoardBloom.Models.Bloom
@{
    Layout = null;
}

@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<head>
    <link rel="stylesheet" href="~/css/Blooms/_BloomPartial.css" />
    <script src="~/js/Bloom/_BloomPartial.js"></script>
</head>

<div class="bloom-card" id="@Model.Id" onclick="() => { handleTap(@Model.Id) }" userId=@Model.UserId> 
    <div class="bloom-header">
        <img class="bloom-header-profile-image" src="https://buffer.com/library/content/images/size/w1200/2023/10/free-images.jpg" alt="profile image" />
        <div class="bloom-header-info">
            <a href="@Url.Action("UserProfile", "Users", new { userId = Model.User.Id })">
                <h4 class="bloom-header-title">@Model.User.UserName</h4>
            </a>  
            <p class="bloom-header-date">@Model.Date</p>
        </div>
        
        <div class="bloom-header-actions">
            @if (ViewBag.isBloomEditable != null && ViewBag.isBloomEditable &&  UserManager.GetUserId(User) == Model.User.Id)
            {
                <a class="bloom-more-button">
                    <img class="bloom-more-icon" src="https://www.svgrepo.com/show/335225/ellipsis.svg" alt="actions icon" />
                </a>
                <div class="bloom-more-menu">
                    <a class="bloom-more-edit-button" href="@Url.Action("Edit", "Blooms", new {id = @Model.Id})">Edit</A>
                    
                    <form method="POST" action="@Url.Action("Delete", "Blooms", new {id = @Model.Id})">
                        <input type="hidden" name="bloomId" value="@Model.Id" />
                        <button class="bloom-more-delete-button">Delete</button>
                    </form>
                </div>
            }
        
            @if (ViewBag.isBloomEditable != null && ViewBag.isBloomEditable == true)
            {
                <button class="bloom-save-button" onmouseover="onSaveButtonClick('@Model.Id', '@UserManager.GetUserId(User)')">
                    <img class="bloom-save-icon" src="https://cdn.iconscout.com/icon/free/png-256/free-save-3251597-2724646.png" alt="save icon" />
                </button>
                <div class="bloom-save-menu">
                    <div class="bloom-save-options">      
                    </div>
                    <div class="bloom-save-actions">
                        <div class="bloom-cancel-button" onClick="cancel()">Cancel</div>
                        <button class="bloom-save-button" type="submit" onclick="handleSaveSubmit(@Model.Id)">Save</button>
                    </div>
                </div>
            }
            else
            {
                <img class="bloom-save-icon" src="https://cdn.iconscout.com/icon/free/png-256/free-save-3251597-2724646.png" alt="save icon" />
            }
        </div>
    </div>

    <div class="bloom-main">
        @if(IsImage(Model.Image))
        {
            <img class="bloom-main-image" src="@Model.Image" alt="bloom image" />
        }
        else if(IsEmbeddedLink(Model.Image))
        {
            <iframe class="bloom-main-video"
            controls
            src="@Url.Content(Model.Image)"
            frameborder="0"
            allowfullscreen>
            </iframe>    
        } else {
            <p class="bloom-main-text">@Model.Title</p>
        }

        <div class="bloom-main-actions">
            @if (ViewBag.isBloomEditable != null && ViewBag.isBloomEditable == true)
            {
                <form class="bloom-main-likes" method="POST" action="@Url.Action("Like", "Blooms")">
                    <input type="hidden" name="bloomId" value="@Model.Id" />
                    <button class="bloom-main-action-link" role="submit">
                        <div class="bloom-footer-like">
                            <p class="bloom-footer-likes">@Model.TotalLikes</p>
                            @if(ViewBag.IsLiked != null && ViewBag.IsLiked == true) {
                                <img class="bloom-footer-like-icon" src="https://upload.wikimedia.org/wikipedia/commons/thumb/3/32/WikiFont_uniE033_-_heart_-_red.svg/800px-WikiFont_uniE033_-_heart_-_red.svg.png" alt="like icon" />
                            } else {
                                <img class="bloom-footer-like-icon" src="https://icons.veryicon.com/png/o/miscellaneous/ui-basic-linear-icon/like-106.png" alt="like icon" />
                            }
                        </div>
                    </button>
                </form> 
            }
            else {
                <div class="bloom-footer-like">
                    <p class="bloom-footer-likes">@Model.TotalLikes</p>
                    <img class="bloom-footer-like-icon" src="https://icons.veryicon.com/png/o/miscellaneous/ui-basic-linear-icon/like-106.png" alt="like icon" />
                </div>
            }

            @if (ViewBag.isBloomEditable != null && ViewBag.isBloomEditable == true)
            {
                <a class="bloom-main-action-link" href="#">
                    <img class="bloom-share-icon" src="https://cdn.iconscout.com/icon/free/png-256/free-arrow-1976201-1674187.png" alt="share icon" />
                </a>
            }
            else 
            {
                <img class="bloom-share-icon" src="https://cdn.iconscout.com/icon/free/png-256/free-arrow-1976201-1674187.png" alt="share icon" />
            }
        </div>
    </div>

    <div class="bloom-footer">
        <p class="bloom-footer-description">@Model.Content</p>
    </div>
</div>

@functions {
    private bool IsImage(string url)
    {
        var imageExtensions = new[] { ".jpg", ".jpeg", ".png", ".gif", ".bmp" };
        if(url.LastIndexOf('.') == -1)
        {
            return false;
        }
        var extension = url.Substring(url.LastIndexOf('.')).ToLower();
        return imageExtensions.Contains(extension);
    }

    private bool IsEmbeddedLink(string url) 
    {
        return url.Contains("youtube.com") || url.Contains("vimeo.com") || url.Contains("youtu.be");
    }
}